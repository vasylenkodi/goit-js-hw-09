{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAKP,IAAMQ,EAAcC,SAASC,cAAc,SAE3CF,EAAYG,iBAAiB,UAAU,SAACC,GACtCA,EAAMC,iBAEN,IAAMC,EACGC,OAAOP,EAAY,GAAGQ,OADzBF,EAEEC,OAAOP,EAAY,GAAGQ,OAFxBF,EAGIC,OAAOP,EAAY,GAAGQ,OAGhC,IAAKC,EAAI,EAAGA,EAAIH,EAAgBG,GAAK,EAAG,CAItCnB,EAHwBmB,EAAI,EACPH,EAAgBA,EAAeG,GAGjDC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,M,OACjBJ,EAAAwB,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,M,OAClBJ,EAAAwB,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n}\n\nconst formElement = document.querySelector(\".form\");\n\nformElement.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const options = {\n    delay: Number(formElement[0].value),\n    step: Number(formElement[1].value),\n    amount: Number(formElement[2].value),\n  };\n\n  for (i = 0; i < options.amount; i += 1) {\n    const promisePosition = i + 1;\n    const promiseDelay = options.delay + options.step * i;\n    \n    createPromise(promisePosition, promiseDelay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );;\n  }\n});\n    \n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$formElement","document","querySelector","addEventListener","event","preventDefault","options","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b04ae35a.js.map"}