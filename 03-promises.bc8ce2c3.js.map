{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKb,MAAMQ,EAAcC,SAASC,cAAc,SAE3CF,EAAYG,iBAAiB,UAAWC,IACtCA,EAAMC,iBAEN,MAAMC,EACGC,OAAOP,EAAY,GAAGQ,OADzBF,EAEEC,OAAOP,EAAY,GAAGQ,OAFxBF,EAGIC,OAAOP,EAAY,GAAGQ,OAGhC,IAAKC,EAAI,EAAGA,EAAIH,EAAgBG,GAAK,EAAG,CAItCnB,EAHwBmB,EAAI,EACPH,EAAgBA,EAAeG,GAGjDC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,KACjBJ,EAAAuB,OAAOC,QAAQ,uBAAqBrB,QAAiBC,SAAYqB,OAElE,EAAOtB,WAAUC,WAChBJ,EAAAuB,OAAMG,QAAC,sBAASvB,QAA8BC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n}\n\nconst formElement = document.querySelector(\".form\");\n\nformElement.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const options = {\n    delay: Number(formElement[0].value),\n    step: Number(formElement[1].value),\n    amount: Number(formElement[2].value),\n  };\n\n  for (i = 0; i < options.amount; i += 1) {\n    const promisePosition = i + 1;\n    const promiseDelay = options.delay + options.step * i;\n    \n    createPromise(promisePosition, promiseDelay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );;\n  }\n});\n    \n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$formElement","document","querySelector","addEventListener","event","preventDefault","options","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.bc8ce2c3.js.map"}